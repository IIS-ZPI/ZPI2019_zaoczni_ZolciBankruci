import org.junit.Test;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import static org.junit.Assert.assertEquals;

public class ChangesDistributorTest {

    @Test
    public void changesTest() throws Exception {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate date = LocalDate.parse("2019-12-01", formatter);
        List<Double> changesList = Arrays.asList(1.1014418521269238, 0.006913441625982619, -0.0011024668840677876, 0.001936614608110121, 4.469221594147754E-4, -0.0030323950543047484, 0.0010915184887996254, 7.111347604917828E-4, 0.004331983544575202, 0.005297697391245304, -0.004544094263085663, 0.001500856320180377, -0.001630838308678717, 2.972912608560918E-4, -0.0016029282851741655, -0.0037063264293317744, -8.594219987205776E-4, 0.006396160452489585, 0.006054092969791203, 0.0013955039819963933);
        ArrayList<Double> prevMonthChanges = new ArrayList<>(changesList);
        changesList = Arrays.asList(1.0893466510573642, 0.001209236569653216, 0.005857912433509194, 9.284178826693967E-4, -9.829086110779706E-4, 0.0027397897669811933, -7.038931674552273E-4, 0.0033485354643687515, -7.857646429152432E-4, 0.0019990538952932013, -3.4355765598981236E-4, 0.0010491355245765277, 0.005323363841840401, 0.003758489111717056, 0.0038921845732691196, -0.0024937591452411922, -0.0022462321016922804, 0.0012951887320515887, -0.0011040457550741678, -0.003001135778986974, -0.0013349650157428172, 0.003402830477378771, 0.00523359011043345, 1.503742570019284E-4, -0.0036900006471547453, -0.0037490808331142045, -0.0012868291790486541, -0.003916141035164911, -5.44196705004163E-4, -0.0018664586318899445, -0.001385812989730839, 0.0018100364344075803, 0.004288562712286614, 5.925392448808964E-4, -4.547521824387335E-4, 0.002371079321854097, -0.002615243680815338, -0.004801077759978067, 1.4590862092567214E-4, -4.767139454233682E-4, 3.8484381851366933E-4, -8.564555476975322E-4, 9.531532875834969E-4, 0.006913441625982619, -0.0011024668840677876, 0.001936614608110121, 4.469221594147754E-4, -0.0030323950543047484, 0.0010915184887996254, 7.111347604917828E-4, 0.004331983544575202, 0.005297697391245304, -0.004544094263085663, 0.001500856320180377, -0.001630838308678717, 2.972912608560918E-4, -0.0016029282851741655, -0.0037063264293317744, -8.594219987205776E-4, 0.006396160452489585, 0.006054092969791203, 0.0013955039819963933);
        ArrayList<Double> prevQuaterChanges = new ArrayList<>(changesList);

        CurrencyData currencyDataPrevMonth = new CurrencyData(CurrencySymbols.EUR.toString(), CurrencySymbols.USD.toString(), date, date.plusMonths(1));
        ChangesDistributor changesDistributor = new ChangesDistributor(currencyDataPrevMonth);
        assertEquals(changesDistributor.getChanges(), prevMonthChanges);

        date = LocalDate.parse("2019-10-01", formatter);
        CurrencyData currencyDataPrevQuater = new CurrencyData(CurrencySymbols.EUR.toString(), CurrencySymbols.USD.toString(), date, date.plusMonths(3));
        changesDistributor = new ChangesDistributor(currencyDataPrevQuater);
        assertEquals(changesDistributor.getChanges(), prevQuaterChanges);
    }
}